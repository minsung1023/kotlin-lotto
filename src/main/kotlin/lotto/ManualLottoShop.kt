package lotto

import lotto.vo.Money

class ManualLottoShop : LottoShop {
    override fun sell(cash: Money, purchaseCommand: PurchaseCommand): Pair<Lottos, Money> {
        val totalPurchaseLottoCount = cash / Lotto.PRICE
        val manualLottos = purchaseCommand.lottos
        val remainingUnassignedLottoCount = (totalPurchaseLottoCount - manualLottos.size).toInt()
        require(remainingUnassignedLottoCount >= 0) { "금액이 부족합니다." }

        return Lottos(
            manualLottos = manualLottos,
            autoGeneratedLottos = listOf(),
        ) to cash - (Lotto.PRICE * manualLottos.size)
    }
}
